# Bring in dotfiles environment variables
source "${HOME}/.env.dotfiles.sh"

# your project folder that we can `c [tab]` to
export PROJECTS=~/Code


# all of our zsh files
typeset -U config_files
config_files=($DOTFILES_ROOT/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}; do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
  source $file
done

unset config_files

# load paths from the path helper
[ -d "/etc/paths.d" ] && eval $(/usr/libexec/path_helper -s)

## configure autojump
#[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh
# I want to use [ and ] damn it!
unsetopt nomatch

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [ -f "$HOME/.env.local.sh" ]; then
  source "${HOME}/.env.local.sh"
fi

# source `.env.local_zsh.sh` if it exists
if [ -f "${HOME}/.env.local_zsh.sh" ]; then
  source "${HOME}/.env.local_zsh.sh"
fi
