[alias]
        co      = checkout
        wtf     = !$DOTFILES_ROOT/bin/git-wtf
        count   = !git shortlog -sn
        lg      = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
        sync    = fetch origin master:master
        sha     = "!f() { git rev-parse ${@:-HEAD}; }; f"
        squash  = "!f() { git rebase -i $(git merge-base HEAD origin/master); }; f"
        edit    = "!f() { $EDITOR $(git show --name-only --format= ${@}); }; f"
        fu      = "!f() { [ -n \"${__git_ps1_branch_name}\" ]  || exit 1;  git add .; git commit -m 'foo'; git push origin \"${__git_ps1_branch_name}\"; }; f"
        squash-all = "!f(){ git reset $(git commit-tree HEAD^{tree} -m \"${1:-A new start}\");};f"
        pr      = "!f() { branch_name=\"$(git rev-parse --abbrev-ref HEAD)\"; repo_url=\"https://$(git remote get-url --push origin | tr ':' '/' | grep -o '[^/@]\\+/[^/]\\+/[^/.]\\+')\"; echo \"${repo_url}/pull/new/${branch_name}\"; open \"${repo_url}/pull/new/${branch_name}\"; }; f"
        dad     = "!f() { git commit -m \"$(curl -s https://icanhazdadjoke.com/)\"; }; f"
        conflict = "!f() { $EDITOR $(git diff --name-only --diff-filter=U); }; f"
        gredit   = "!f() { $EDITOR $(git grep ${@} | cut -d: -f 1 | sort -u ); }; f"

[color]
        diff = auto
        status = auto
        branch = auto
        ui = auto
[status]
        showUntrackedFiles = all
[core]
        excludesfile = ~/.gitignore
        editor = vim
	      whitespace = trailing-space,space-before-tab,tab-in-indent
[apply]
        whitespace = nowarn
[mergetool]
        keepBackup = false
[difftool]
        prompt = false
[commit]
        gpgsign = true
[push]
        # See `git help config` (search for push.default)
        # for more information on different options of the below setting.
        #
        # Setting to git 2.0 default to suppress warning message
        default = simple

        autoSetupRemote = true

[pull]
        rebase = true

[fetch]
        prune = true

[include]
        path = .gitconfig.dynamic
        path = .gitconfig.local

[url "git@github.com:"]
	insteadOf = https://github.com/
[pull]
	rebase = true
