source $DOTFILES_SCRATCH/vim/bundle/vim-pathogen/autoload/pathogen.vim

" use pathogen to manage plugins
execute pathogen#infect($DOTFILES_SCRATCH.'/vim/bundle/{}')

" Syntax highlighting
syntax on

function SetBackground()
  " read background from first line of file
  if filereadable($DOTFILES_SCRATCH."/vim_background")
    let &background = readfile($DOTFILES_SCRATCH."/vim_background")[0]
  endif
endfunction

"function Dark()
"  if filewritable($DOTFILES_SCRATCH."/vim_background")
"    call writefile(["dark"], $DOTFILES_SCRATCH."/vim_background")
"    let &background = "dark"
"  endif
"endfunction

"function Light()
"  if filewritable($DOTFILES_SCRATCH."/vim_background")
"    call writefile(["light"], $DOTFILES_SCRATCH."/vim_background")
"    let &background = "light"
"  endif
"endfunction

"command Dark  :call Dark
"command Light :call Light

autocmd BufRead,BufNewFile * call SetBackground()

colorscheme solarized

" Show cursor position
set ruler
" Open new tabs on the right and below
set splitright
set splitbelow
" Line numbers
set number
" Highlight cursor line
set cursorline

" Highlight lines that go over columns
set colorcolumn=101

" Number of visual spaces per TAB character
set tabstop=2
" Number of spaces in TAB when editing
set softtabstop=2
" use 2 space tab for autoindents too
set shiftwidth=2
" Use spaces instead of tabs when hitting tab
set expandtab
" Ignore case in searches
set hlsearch
" Highlight dynamically as pattern is typed
set incsearch
" Highlight matching ([{}])
set showmatch
" Enable backspace everywhere
set backspace=indent,eol,start

" Show filename in the window titlebar
set title
" Start scrolling 5 lines before reaching the window border
set scrolloff=5

" Add the g flag to search/replace by default
set gdefault

" Wrap gitcommit file types at the appropriate length
"""filetype indent plugin on
filetype indent on

"NOTE: I didn't like this when it finally started working
"use shared clibpoard
"set clipboard=unnamed

"better tab completion and completion menu for vim commands
set wildmenu
set wildmode=list:longest,full

if has('persistent_undo')
    set undodir=$DOTFILES_SCRATCH/vim/undo_dir
    set undofile
endif

" turn off vim-json quotes autohiding, even though I love them, it's confusing
let g:vim_json_syntax_conceal = 0

nnoremap <CR> :noh <bar> :call SetBackground()<CR><CR>

" File explorer
let g:vimfiler_as_default_explorer = 1
nnoremap <C-N> :<C-u>VimFilerExplorer -split -simple -parent -winwidth=55 -toggle -no-quit<CR>

" toggle buffer list
map <C-b> :BuffergatorToggle<CR>

" vim-chef key mappings
nnoremap <C-k> :<C-u>ChefFindAny<CR>
nnoremap <C-l> :<C-u>ChefFindAnyVsplit<CR>
nnoremap <C-j> :<C-u>ChefFindRelated<CR>

inoremap pdb import pdb; pdb.set_trace()
inoremap bpry require pry; binding.pry

" TABS OVER SPACES!!!
autocmd FileType sh,c,cpp,ruby,puppet,yaml autocmd BufWritePre <buffer> :%s/\t/    /eg
" trim trailing whitespace on exit
autocmd FileType sh,c,cpp,java,php,ruby,eruby,yaml autocmd BufWritePre <buffer> :%s/\s\+$//e

" convert symbols to strings
map mb :%s/\[:\([a-z_]\+\)\]/\['\1'\]/<CR>

" set leader key
let mapleader = ","


" devlog header
nmap <leader>N ggi# <C-R>=strftime("%Y-%m-%d - %A")<CR><CR><CR>

" custom file extensions
autocmd BufRead,BufNewFile *.eyaml set filetype=yaml
autocmd BufRead,BufNewFile *Jenkinsfile* set filetype=groovy
autocmd BufRead,BufNewFile *Dockerfile* set filetype=dockerfile


"let g:syntastic_puppet_checkers = ['puppet-lint']
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

"let g:syntastic_terraform_checkers = ['terraform fmt']

let g:syntastic_sh_shellcheck_args="-e SC1090 -e SC2181"
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
